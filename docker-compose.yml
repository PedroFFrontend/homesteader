services:
  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
    expose:
      - "1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - mqtt_network
    healthcheck:
      test:
        ["CMD-SHELL", "mosquitto_sub -h localhost -t '$$SYS/#' -C 1 || exit 1"]
      interval: 2s
      timeout: 5s
      retries: 15

  devices:
    build: ./devices
    expose:
      - "1883"
    networks:
      - mqtt_network
    depends_on:
      mosquitto:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1

  postgres:
    image: postgres:15.3-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      OPENWEATHERMAP_API_KEY: ${OPENWEATHERMAP_API_KEY}
    networks:
      - mqtt_network
      - default
    ports:
      - "8080:8080"

  frontend:
    build: ./frontend
    ports:
      - "3000:5173"
    develop:
      watch:
        - action: sync
          path: ./frontend/src/
          target: /usr/src/app/src/
          ignore:
            - ./frontend/node_modules/
        - action: rebuild
          path: ./frontend/package.json
          ignore:
            - node_modules/

volumes:
  postgres_data:

networks:
  mqtt_network:
    driver: bridge
  default:
    driver: bridge
